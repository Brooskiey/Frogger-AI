@startuml

title __GAME's Class Diagram__\n

  namespace com.mygdx.kittener.game {
    class com.mygdx.kittener.game.Agent {
        - color : Color
        - id : int
        - isDead : boolean
        - lastY : float
        - score : int
        - stillTimer : float
        - texture : Texture
        - vision : float[]
        + Agent()
        + equals()
        + getColor()
        + getId()
        + getLastY()
        + getScore()
        + getStillTimer()
        + getTexture()
        + getVision()
        + isDead()
        + reset()
        + setColor()
        + setDead()
        + setLastY()
        + setScore()
        + setStillTimer()
        + setTexture()
        + setVision()
    }
  }
  

  namespace com.mygdx.kittener.game {
    class com.mygdx.kittener.game.GameScreen {
        - NUM_AGENTS : int
        - agents : ArrayList<Agent>
        - bus : Texture
        - camera : OrthographicCamera
        - catBack : Texture
        - catFront : Texture
        - catLeft : Texture
        - catRight : Texture
        - death : Texture
        - delayTimer : float
        - hazards : ArrayList<Hazard>
        - highestOverallScore : int
        - leftBounds : int
        - longLog : Texture
        - mediumLog : Texture
        - performedNS : boolean
        - raceCar : Texture
        - renderer : TiledMapRenderer
        - rightBounds : int
        - shortLog : Texture
        - turtle : Texture
        - yellowCar : Texture
        + GameScreen()
        + dispose()
        + render()
        - areAllAgentsDead()
        - calculateAgentScore()
        - checkCollisions()
        - getHighScore()
        - moveAgent()
        - resetGame()
        - spawnAgents()
        - spawnMapObjects()
        - updateAgentVision()
        - updateAgents()
        - updateHazards()
    }
  }
  

  namespace com.mygdx.kittener.game {
    class com.mygdx.kittener.game.Hazard {
        - speed : float
        - startSpeed : float
        - startXPos : int
        - startYPos : int
        - texture : Texture
        + Hazard()
        + getSpeed()
        + getTexture()
        + reset()
        + setSpeed()
        + setTexture()
    }
  }
  

  namespace com.mygdx.kittener.game {
    class com.mygdx.kittener.game.MainGame {
        + batch : SpriteBatch
        + font : BitmapFont
        + gameScreen : Screen
        + mainMenuScreen : Screen
        - height : int
        - width : int
        + MainGame()
        + create()
        + dispose()
        + getHeight()
        + getWidth()
        + pause()
        + render()
    }
  }
  

  namespace com.mygdx.kittener.game {
    class com.mygdx.kittener.game.MainMenuScreen {
        ~ camera : OrthographicCamera
        ~ renderer : OrthogonalTiledMapRenderer
        + MainMenuScreen()
        + render()
    }
  }
  

  namespace com.mygdx.kittener.game {
    enum Speeds {
      LEFT_FAST
      LEFT_MED
      LEFT_SLOW
      RIGHT_FAST
      RIGHT_MED
      RIGHT_SLOW
      objectSpeed
    }
  }
  

  com.mygdx.kittener.game.Agent -up-|> com.badlogic.gdx.math.Rectangle
  com.mygdx.kittener.game.GameScreen -up-|> com.badlogic.gdx.ScreenAdapter
  com.mygdx.kittener.game.GameScreen o-- com.mygdx.kittener.game.MainGame : game
  com.mygdx.kittener.game.GameScreen o-- neat.Population : population
  com.mygdx.kittener.game.Hazard -up-|> com.badlogic.gdx.math.Rectangle
  com.mygdx.kittener.game.MainGame -up-|> com.badlogic.gdx.Game
  com.mygdx.kittener.game.MainMenuScreen -up-|> com.badlogic.gdx.ScreenAdapter
  com.mygdx.kittener.game.MainMenuScreen o-- com.mygdx.kittener.game.MainGame : game


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
